    server {
    listen 80;
    index index.php index.html;
    error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log combined;
    root /var/www/public;
    
    # Agregar logs más detallados para debug
    error_log /var/log/nginx/error.log info;
    
    # Manejo de archivos estáticos primero
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }
    
    # Manejo de archivos PHP
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass barberia-app:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_read_timeout 300;
        
        # Parámetros esenciales para Laravel
        fastcgi_param REQUEST_METHOD $request_method;
        fastcgi_param REQUEST_URI $request_uri;
        fastcgi_param QUERY_STRING $query_string;
        fastcgi_param HTTP_HOST $host;
        fastcgi_param HTTPS $https if_not_empty;
    }
    
    # Manejo de todas las rutas (debe ir al final)
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }
    
    # Manejo de favicon.ico y robots.txt
    location = /favicon.ico { 
        access_log off; 
        log_not_found off; 
    }
    
    location = /robots.txt { 
        access_log off; 
        log_not_found off; 
    }
    
    # Denegar acceso a archivos .htaccess
    location ~ /\.ht {
        deny all;
    }
    
    # Denegar acceso a archivos sensibles
    location ~ /\.(git|env) {
        deny all;
    }
    
    # Cabeceras de seguridad
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
}
